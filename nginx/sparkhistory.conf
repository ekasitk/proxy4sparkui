# For Spark History Server
server {
    listen       10030;
    proxy_set_header Accept-Encoding "";

    location ^~ /nginx {    # longest prefix (no regex) is checked before regex
        #auth_basic           "private hosts";
        #auth_basic_user_file /etc/nginx/htpasswd;

        location ~ "^/nginx/([^\/]+)/(.*)" {   # regex
            resolver localhost;
            proxy_pass http://$1/$2$is_args$args;
            set $host_port $1;
            # Important! If there is subs_filter(s) inside, it overrides the outside subs_filters
        }
        location ~ "^/nginx/([^\/]+)" {        # regex
            resolver localhost;
            proxy_pass http://$1$is_args$args;
            set $host_port $1;
            # Important! If there is subs_filter(s) inside, it overrides the outside subs_filters
        }
        sub_filter_once off;
        sub_filter "<img src=\"" "<img src=\"/nginx/$host_port/";
        sub_filter "<script src=\"/static" "<script src=\"/nginx/$host_port/static";
        sub_filter "<link rel=\"stylesheet\" href=\"/static" "<link rel=\"stylesheet\" href=\"/nginx/$host_port/static";

        sub_filter "<a href=\"/" "<a href=\"/nginx/$host_port/";
        sub_filter "<a href=\"http://" "<a href=\"/nginx/";
        sub_filter "<a href=\"logPage" "<a href=\"/nginx/$host_port/logPage";


        subs_filter "<a href=\".+\">Back to Master" "<a href='/\'>Back to Master" r;

        proxy_redirect ~^http://(.*) /nginx/$1;
    }

    location / {
        #auth_basic           "private hosts";
        #auth_basic_user_file /etc/nginx/htpasswd;

        proxy_pass   http://localhost:18080;
        sub_filter "<a href=\"http://" "<a href=\"/nginx/";
        sub_filter_once off;
    }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

}
